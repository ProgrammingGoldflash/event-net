@page "/events"
@attribute [AllowAnonymous]
@using Event.Net.Shared;
@inject IHttpClientFactory HttpFactory
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudStack Spacing="4">
    <MudStack Row="true" AlignItems="AlignItems.Center" Style="justify-content: space-between;">
        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>

        <MudLink Href="/events/new">
            <MudButton Variant="Variant.Filled" Color="Color.Primary">
                Add a new event
            </MudButton>
        </MudLink>
    </MudStack>

    @if (events != null && events.Any())
    {
        <MudGrid Spacing="3" Justify="Justify.Center">
            @foreach (var e in events)
            {
                <MudItem xs="6" md="4" lg="3">
                    <MudPaper Class="pa-4">
                        <MudStack>
                            <MudStack Row="true" Style="justify-content: space-between;">
                                <MudLink Href="@($"/events/{e.EventId}")" Underline="Underline.None" Color="Color.Default">
                                    <MudText Typo="Typo.h4">
                                        @e.EventName - @e.EventDate.ToShortDateString()
                                    </MudText>
                                </MudLink>

                                @if (userId == e.OrganizerId)
                                {
                                    <MudLink Href="@($"/events/edit/{e.EventId}")">
                                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" />
                                    </MudLink>
                                }
                            </MudStack>
                            <span>
                                @e.Description
                            </span>
                        </MudStack>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
</MudStack>